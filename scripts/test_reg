#!/bin/bash

#/*****************************************************************************
# *  Description: scripting shell for slp_client - generates an SLP SRVREG
# *
# *****************************************************************************/


###########################################################################
# This script shows how to use the slp_srvreg command and tests the parameters
# of a service registration. Use it to verify your parameters are correct. To 
# do an actual slp registration, omit the --test command line option from the 
# slp_srvreg command below. 
#
# Usage: 
# 
# test_reg -t<type> -u<url> -a<attributes> [-s<scopes>]
#            
#            type: a valid service type string. See 
#                  ftp://ftp.rfc-editor.org/in-notes/rfc2609.txt
#            
#            url: a valid service url. See 
#                 ftp://ftp.rfc-editor.org/in-notes/rfc2609.txt
#
#            attribute: an SLP attriute string. See
#                       ftp://ftp.rfc-editor.org/in-notes/rfc2608.txt
#
#            scopes: an optional SLP list string. It must be in the form
#            "scope1[, scope2[, scope n] ]. e.g., "admin, eng, account"
#
###########################################################################

TYPE=""
URL=""
ATTRS=""
SCOPE=""

while getopts ":t:u:a:s:" opt; do
    case $opt in 
	t ) TYPE=$OPTARG ;;
	u ) URL=$OPTARG ;;
	a ) ATTRS=$OPTARG ;;
	s ) SCOPE=$OPTARG ;; 
	\? ) echo 'test_reg -t<type> -u<url> -a<attributes> [-s<scopes>]'
	     exit 1
    esac
done
    shift $(($OPTIND - 1))

echo "Testing a Service Registration: "
echo "   Type: " "$TYPE"
echo "   URL: " "$URL"
echo "   Attributes: " "$ATTRS"
echo "   Scopes: " "$SCOPE" 

slp_srvreg --type="$TYPE" --url="$URL" --attributes="$ATTRS" --scopes="$SCOPES" --test

case $? in
    0) echo "Service Registration is valid"
       exit 0;;
    1)  echo "Service Type string (and possibly other strings) is invalid" 
	exit 1;;
    2)  echo "Url string (and possibly other strings) is invalid" 
	exit 1;;
    3)  echo "Attribute string (and possibly the scope string) is invalid"
	exit 1;;
    4) echo "Scope string is invalid"
	exit 1;;
esac


